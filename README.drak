What does dak do?

  - parses incoming
  - authenticates uploads
  - removes old debs

  - maintains a db
  - creates Release/Sources/Packages/Contents/Diff files

  - allows manual viewing/manipulation of suites

  - closes bugs

So how to write drak?

  - (1) manage the pool
  - (2) dump indices
  - (3) allow additions via (a) other Packages, (b) incoming
  - (4) provide an API to manipulate the pool

Expanding it to support git sources, debug info, rpms, windows stuff
and live cds would be l33t.

What's the database managing?

  - index information
  - collections
  - ownership

========================================
real things to do.
========================================

mirror a suite
coalesce suites -- so ubuntu and debian sources are only stored once
handle uploads / creating suites
handle managing suites (deletions, britney, etc)

========================================
mirror a suite...
========================================

 1. pull updates to index files
     -- diffs/p7z/bz2/gz/direct
 2. recreate implied files
     -- other compressed stuff
     -- debs
     -- d-i
 3. make new indexes/files available

========================================
what's a suite look like?
========================================

 dists/$alias -> $suite
 dists/$suite:
    Release
    Release.gpg
    Contents-$arch [.gz, .bz2, .diff]
    $component/
	source/
		Release
		Sources [.gz, .bz2, .diff]
        binary-$arch/
		Release
		Packages [.gz, .bz2, .diff]
        debian-installer/
		binary-$arch/
			Release
			Packages [.gz, .bz2]
	i18n/
		Index
		Translations-ll_LL [.bz2]

Also:

 dists/$suite/$components/installer-$arch/
	current -> $date
	$date/
		images/ ...


